// This file is @generated by prost-build.
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct AuthRequest {
    #[prost(string, tag = "1")]
    pub key: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct AssignedIp {
    #[prost(string, tag = "1")]
    pub ip: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub netmask: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub gateway: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct ClientTrafficReceive {
    #[prost(bytes = "vec", tag = "1")]
    pub encrypted_packet: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct ClientTrafficSend {
    #[prost(bytes = "vec", tag = "1")]
    pub encrypted_packet: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct Message {
    #[prost(oneof = "message::Content", tags = "1, 2, 3, 4")]
    pub content: ::core::option::Option<message::Content>,
}
/// Nested message and enum types in `Message`.
pub mod message {
    #[derive(Clone, PartialEq, Eq, Hash, ::prost::Oneof)]
    pub enum Content {
        #[prost(message, tag = "1")]
        AuthRequest(super::AuthRequest),
        #[prost(message, tag = "2")]
        AuthResponse(super::AssignedIp),
        #[prost(message, tag = "3")]
        ClientTrafficReceive(super::ClientTrafficReceive),
        #[prost(message, tag = "4")]
        ClientTrafficSend(super::ClientTrafficSend),
    }
}
